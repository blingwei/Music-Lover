<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blingwei.musicService.dao.ContactMapper">
    <resultMap id="BaseResultMap" type="com.blingwei.musicService.pojo.Contact">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="contact_id" jdbcType="INTEGER" property="contactId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from contact
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.blingwei.musicService.pojo.Contact">
        insert into contact (id, user_id, contact_id,
        create_time, is_delete)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{contactId,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.blingwei.musicService.pojo.Contact">
        update contact
        set user_id = #{userId,jdbcType=INTEGER},
        contact_id = #{contactId,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        is_delete = #{isDelete,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, user_id, contact_id, create_time, is_delete
        from contact
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, user_id, contact_id, create_time, is_delete
        from contact
    </select>

    <delete id="deleteContact" parameterType="java.lang.Integer">
        delete from contact
        where contact_id = #{contactId}
        and user_id = #{id}
    </delete>
    <insert id="addContact">
        insert into contact(user_id, contact_id, create_time)
        values (#{id}, #{contactId}, now())
    </insert>
    <select id="getContact" resultMap="BaseResultMap">
        select id, user_id, contact_id, create_time, is_delete
        from contact
        where user_id = #{id}
        and contact_id = #{contactId}
    </select>
</mapper>